name: C++ CI with Qt (Optimized)

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Cache Qt installation
      id: cache-qt
      uses: actions/cache@v4
      with:
        path: |
          ${{ runner.workspace }}/Qt
          ~/.cache/pip
        key: ${{ runner.os }}-qt-5.15.2-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-qt-5.15.2-
          ${{ runner.os }}-qt-
    
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '5.15.2'
        host: 'linux'
        target: 'desktop'
        modules: 'qtbase qttools qtwidgets'
        install-deps: 'true'
        cache: 'true'
        cache-key-prefix: 'install-qt-action'
        setup-python: 'false'
        tools: 'tools_cmake'
    
    - name: Cache system dependencies
      uses: actions/cache@v4
      with:
        path: |
          /var/cache/apt
          /var/lib/apt
        key: ${{ runner.os }}-apt-${{ hashFiles('**/.github/workflows/*.yml') }}
        restore-keys: |
          ${{ runner.os }}-apt-
    
    - name: Install system dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends \
          cmake \
          g++ \
          build-essential \
          libgl1-mesa-dev \
          libxkbcommon-x11-0 \
          libgtest-dev \
          ninja-build
    
    - name: Cache Google Test build
      uses: actions/cache@v4
      with:
        path: /usr/lib/libgtest*.a
        key: ${{ runner.os }}-gtest-${{ hashFiles('/usr/src/gtest/**') }}
    
    - name: Install Google Test
      run: |
        if [ ! -f /usr/lib/libgtest.a ]; then
          cd /usr/src/gtest
          sudo cmake CMakeLists.txt
          sudo make -j$(nproc)
          sudo cp lib/*.a /usr/lib || sudo cp *.a /usr/lib
        fi
    
    - name: Cache CMake build
      uses: actions/cache@v4
      with:
        path: |
          build
          ~/.cmake
        key: ${{ runner.os }}-cmake-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-cmake-
    
    - name: Create build directory
      run: mkdir -p build
    
    - name: Configure CMake
      run: |
        cd build
        cmake -G Ninja \
              -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_PREFIX_PATH=$Qt5_DIR \
              -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
              ..
    
    - name: Build project
      run: |
        cd build
        ninja -j$(nproc)
    
    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure --parallel $(nproc)
    
    - name: Upload build artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          build/
          !build/**/*.o
          !build/**/*.a
        retention-days: 7
